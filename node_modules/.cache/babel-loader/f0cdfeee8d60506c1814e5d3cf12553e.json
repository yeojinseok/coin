{"ast":null,"code":"import{useQuery}from\"react-query\";import{fetchCoinHistory}from\"../api\";import ApexChart from\"react-apexcharts\";import{jsx as _jsx}from\"react/jsx-runtime\";var Chart=function Chart(_ref){var coinId=_ref.coinId;var _useQuery=useQuery([\"ohlcv\",coinId],function(){return fetchCoinHistory(coinId);}),isLoading=_useQuery.isLoading,data=_useQuery.data;return/*#__PURE__*/_jsx(\"div\",{children:isLoading?\"Loading chart...\":/*#__PURE__*/_jsx(ApexChart,{type:\"line\",series:[{name:\"Price\",data:data===null||data===void 0?void 0:data.map(function(price){return price.close;})}],options:{theme:{mode:\"dark\"},chart:{height:300,width:500,toolbar:{show:false},background:\"transparent\"},grid:{show:false},stroke:{curve:\"smooth\",width:4},yaxis:{show:false},xaxis:{axisBorder:{show:false},axisTicks:{show:false},labels:{show:false},categories:data===null||data===void 0?void 0:data.map(function(price){return price.time_close;}),type:\"datetime\"},fill:{type:\"gradient\",gradient:{gradientToColors:[\"#0be881\"],stops:[0,100]}},colors:[\"#0fbcf9\"],tooltip:{y:{formatter:function formatter(value){return\"$\".concat(value.toFixed(2));}}}}})});};export default Chart;","map":{"version":3,"sources":["/Users/yeojinseok/개인스터디/리액트강의/typeScript/my-app/src/routes/Chart.tsx"],"names":["useQuery","fetchCoinHistory","ApexChart","Chart","coinId","isLoading","data","name","map","price","close","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","type","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed"],"mappings":"AAAA,OAASA,QAAT,KAAyB,aAAzB,CACA,OAAQC,gBAAR,KAA+B,QAA/B,CACA,MAAOC,CAAAA,SAAP,KAAsB,kBAAtB,C,2CAkBA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAwB,IAAtBC,CAAAA,MAAsB,MAAtBA,MAAsB,CAGlC,cAAyBJ,QAAQ,CAAgB,CAAC,OAAD,CAASI,MAAT,CAAhB,CAAkC,iBAAIH,CAAAA,gBAAgB,CAACG,MAAD,CAApB,EAAlC,CAAjC,CAAOC,SAAP,WAAOA,SAAP,CAAiBC,IAAjB,WAAiBA,IAAjB,CACA,mBACK,qBACFD,SAAS,CACR,kBADQ,cAGR,KAAC,SAAD,EACE,IAAI,CAAC,MADP,CAEE,MAAM,CAAE,CACN,CACEE,IAAI,CAAE,OADR,CAEED,IAAI,CAAEA,IAAF,SAAEA,IAAF,iBAAEA,IAAI,CAAEE,GAAN,CAAU,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAjB,EAAV,CAFR,CADM,CAFV,CAQE,OAAO,CAAE,CACPC,KAAK,CAAE,CACLC,IAAI,CAAE,MADD,CADA,CAIPC,KAAK,CAAE,CACLC,MAAM,CAAE,GADH,CAELC,KAAK,CAAE,GAFF,CAGLC,OAAO,CAAE,CACPC,IAAI,CAAE,KADC,CAHJ,CAMLC,UAAU,CAAE,aANP,CAJA,CAYPC,IAAI,CAAE,CAAEF,IAAI,CAAE,KAAR,CAZC,CAaPG,MAAM,CAAE,CACNC,KAAK,CAAE,QADD,CAENN,KAAK,CAAE,CAFD,CAbD,CAiBPO,KAAK,CAAE,CACLL,IAAI,CAAE,KADD,CAjBA,CAoBPM,KAAK,CAAE,CACLC,UAAU,CAAE,CAAEP,IAAI,CAAE,KAAR,CADP,CAELQ,SAAS,CAAE,CAAER,IAAI,CAAE,KAAR,CAFN,CAGLS,MAAM,CAAE,CAAET,IAAI,CAAE,KAAR,CAHH,CAILU,UAAU,CAAErB,IAAF,SAAEA,IAAF,iBAAEA,IAAI,CAAEE,GAAN,CAAU,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACmB,UAAjB,EAAV,CAJP,CAKLC,IAAI,CAAC,UALA,CApBA,CA2BPC,IAAI,CAAE,CACFD,IAAI,CAAE,UADJ,CAEFE,QAAQ,CAAE,CAAEC,gBAAgB,CAAE,CAAC,SAAD,CAApB,CAAiCC,KAAK,CAAE,CAAC,CAAD,CAAI,GAAJ,CAAxC,CAFR,CA3BC,CA+BLC,MAAM,CAAE,CAAC,SAAD,CA/BH,CAgCLC,OAAO,CAAE,CACPC,CAAC,CAAE,CACDC,SAAS,CAAE,mBAACC,KAAD,mBAAeA,KAAK,CAACC,OAAN,CAAc,CAAd,CAAf,GADV,CADI,CAhCJ,CARX,EAJC,EADL,CAuDH,CA3DD,CA6DA,cAAepC,CAAAA,KAAf","sourcesContent":["import { useQuery } from \"react-query\";\nimport {fetchCoinHistory} from \"../api\"\nimport ApexChart from \"react-apexcharts\";\n\n\ninterface ChartProps{\n    coinId:string;\n}\n\ninterface IHistorical{\n    time_open: string\n    time_close: string\n    open: number\n    high: number\n    low: number\n    close: number\n    volume: number\n    market_cap: number\n}\n\nconst Chart = ({coinId}:ChartProps) =>{\n\n\n    const {isLoading,data} = useQuery<IHistorical[]>([\"ohlcv\",coinId], ()=>fetchCoinHistory(coinId))\n    return (\n         <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => price.close),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 4,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: false },\n              categories: data?.map((price) => price.time_close),\n              type:\"datetime\"\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n              },\n              colors: [\"#0fbcf9\"],\n              tooltip: {\n                y: {\n                  formatter: (value) => `$${value.toFixed(2)}`,\n                },\n              },\n          }}\n        />\n      )}\n    </div>\n    );\n};\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}